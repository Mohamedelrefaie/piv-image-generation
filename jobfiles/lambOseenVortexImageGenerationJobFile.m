function JOBFILE = lambOseenVortexImageGenerationJobFile();
% JOBFILE = lambOseenVortexImageGenerationJobFile()
% 
% This function creates the input structure for the function generateImages_LambVortex.m
% The fields specified in this image 
%
% INPUTS
%   None
%
% OUTPUTS
%   JOBFILE = Structure containing the parameters that specify the
%   parameters of the vortex, as well as the locations in which to save the
%   images.

%% Job options.
% Number of processors to use
JOBFILE.JobOptions.NumberOfProcessors = 8;

% Number of digits in the file numbers 
JOBFILE.JobOptions.NumberOfDigits = 6;

% Flag specifying whether the field JOBFILE.ProjectRepository (which specifies the parent folder under
% which to save the images) refers to an absolute path on the filesystem,
% or relative path underneath the path generated by the function
% determineLocalRepositoryPath. The function determineLocalRepositoryPath.m
% determines the path on the local filesystem to a specified directory.
% This option is useful when calling these functions from multiple
% machines, where the path  to the project repository is different on each
% system. For running things quickly, just set this flag to 1.
JOBFILE.JobOptions.DataRepositoryPathIsAbsolute = 1;

% Flag specifying whether to run compiled codes.
JOBFILE.JobOptions.RunCompiled = 0;

% Image naming information.
% Images will be saved in the following folder:
% fullfile(ProjectRepository, 'analysis', 'data', ImageType, SetType, CaseName)
% JOBFILE.ProjectRepository = 'FMISPOMF';
JOBFILE.ProjectRepository = '~/Desktop/test_vortex';
JOBFILE.ImageType = 'synthetic';
JOBFILE.SetType = 'vortex';
JOBFILE.CaseName = 'lambvortex_2014-06-12';

JOBFILE.Parameters.Images.Height = 1024; % Image height (pixels)
JOBFILE.Parameters.Images.Width = 1024; % Image width (pixels)
JOBFILE.Parameters.Images.ParticleConcentration = 0.025; % Particle concentration (particles per pixel)
JOBFILE.Parameters.Images.ParticleDiameter = sqrt(8); % Average particle diameter (pixels)
JOBFILE.Parameters.Images.Extension = '.tif';
JOBFILE.Parameters.ImageClass = 'uint16';

% Number of the first set of images to generate. Initial particle positions
% are re-generated at the beginning of each set; particles are advected
% through time during each set. 
JOBFILE.Parameters.Sets.Start = 1;

% Number of the last set of images to generate
JOBFILE.Parameters.Sets.End = 1;

% Number of images to generate per set. Larger numbers of images per set result in 
% more time through which the particle positions are advected. 
JOBFILE.Parameters.Sets.ImagesPerSet = 4;

% Diameter of the vortex ring (i.e. spacing between cores) (pixels)
JOBFILE.Parameters.Vortex.VortexRadius = 200;

% Diameter of the vortex core (i.e. radius from each core at which max tangential velocity occurs)
JOBFILE.Parameters.Vortex.CoreRadius = 100;

% Velocities
JOBFILE.Parameters.Vortex.PeakVelocity = 5;
JOBFILE.Parameters.Vortex.PropagationVelocity = 0;

% Starting position of the vortex in the image as a fraction of the image size
JOBFILE.Parameters.Vortex.Position.X = 0.5;
JOBFILE.Parameters.Vortex.Position.Y = 0.5;

% Angle between the vortex ring axis and the horizontal axis (degrees)
JOBFILE.Parameters.Vortex.Angle = 0;

% Times in the simulation
JOBFILE.Parameters.Vortex.StartTime = 0;
JOBFILE.Parameters.Vortex.EndTime = JOBFILE.Parameters.Sets.ImagesPerSet - 1; 

% These lines specify the percentage of the displacement noise that
% falls below DisplacementNoiseLevel
JOBFILE.Parameters.Flow.DisplacementNoiseLevel = 0;
JOBFILE.Parameters.Flow.DisplacementNoiseConfidenceInterval = 0.99;

% Noise parameters
JOBFILE.Parameters.Noise.Mean = 0.10;
JOBFILE.Parameters.Noise.Std = 0.05;
JOBFILE.Parameters.Noise.Background = 0.02;

JOBFILE.JobOptions.SimulateNoise = 1;
JOBFILE.JobOptions.SimulateBeam = 1;



end

 